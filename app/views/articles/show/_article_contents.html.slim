- if resource.owned_by? current_user
  .seller-controls
    - if policy(resource).edit?
      => link_to t('article.titles.edit'), edit_article_path, class: "Button"
    - else
      => link_to t('article.titles.edit'), new_article_path(edit_as_new: resource.id), class: "Button"
    - if policy(resource).destroy?
      => button_to t('common.actions.destroy'), article_path(resource), data: { confirm: t('article.delete_confirm', name: article.title) }, method: :delete, class: "Button Button--red"
    - if policy(resource).deactivate?
      => button_to t('article.labels.deactivate'), article_path(deactivate: true), class: "Button", method: :put, confirm: t('article.deactivate_confirm')
      span.sprite_helper title="#{ t('article.show.tooltips.disable') }"

.info
  .left
    figure.image
      - cache [resource, resource.title_image] do
        - if resource.title_image_present?
          / The next line is for providing the proper title image to facebook
          - provide( :title_image, resource.title_image_url(:medium) )
          = link_to image_tag(resource.title_image_url(:medium), :class=> "title_image"), resource.title_image_url(:original) , {class: "image colorbox", rel: "gallery"}
        - else
          = link_to image_tag("missing.png", :class=> "title_image") , "#"
    .thumbnails
      - resource.thumbnails.each do |image|
        - cache [resource,image,"thumbnail"] do
          = link_to image_tag((image ? image.image.url(:thumb) : "missing.png")), image ? image.url_or_original_while_processing(:original) : "/assets/missing.png", class: "colorbox thumbnail", rel: "gallery"
    - cache [resource,resource.seller,"donations"] do
      - if resource.seller.ngo
        =t('article.show.donate_ngo_html', ngo: link_to(resource.seller.nickname, resource.seller))
      - else
        - if show_fair_percent_for? resource
          h4.fair_percent
            = "#{t('article.show.fair_percent')} "
            span.sprite_helper title=t('article.preview.tooltips.fees_and_donations')
          =t('article.show.donate_html')
        - if show_friendly_percent_for? resource
          h4.fair_percent
            => t('article.show.friendly_percent')
            span.sprite_helper title=t('article.preview.tooltips.friendly_percent', percent: resource.friendly_percent, ngo: resource.friendly_percent_organisation_nickname)
          = t('article.show.friendly_percent_html', percent: resource.friendly_percent , ngo: link_to(resource.friendly_percent_organisation_nickname, resource.friendly_percent_organisation))
        .tags
          = render 'articles/show/commendation_labels', article: resource
          = condition_label resource
  .right
    h2.title
      = resource.title
    - if user_signed_in? && resource.active?
      = render "libraries/shared/control_panel", article: resource, libraries: user_libraries, button: true
    .details
      - cache [resource, resource.seller, "basic_information"] do
        h3.price
          = humanized_money_with_symbol resource.price
          span.price-label
            = t('article.price_label')
            - unless article.vat == 0
              =< t('article.vat_included', mwst: article.vat)
        - if resource.seller_free_transport_available
          .free-transport
            - if resource.price < resource.seller_free_transport_at_price
              = t('article.free_transport_at', price: money(resource.seller_free_transport_at_price))
            - else
              strong= t('article.free_transport')
        - if resource.seller.unified_transport_available? && resource.unified_transport?
          .unified-transport
            strong= 'Kombiversand mÃ¶glich'
        .transport
          = t('formtastic.labels.article.transport_method') + " :"
          = render('articles/show/transport_info')
        .transport_time
          - if resource.transport_time && !resource.transport_time.empty?
            = t('formtastic.labels.article.transport_time_with_numbers', time: resource.transport_time)
        = render 'articles/show/basic_price', article: resource
        - unless resource.closed?
          .quantity
            - if resource.sold?
              .out-of-stock = 'Dieser Artikel ist bereits ausverkauft'
            - elsif resource.quantity > 1
              = t('formtastic.labels.article.quantity_with_numbers', quantities: resource.quantity_available_without_article_state)
    .buyer-controls
      = render "articles/show/buy", resource: resource

.socialshareprivacy data={ uri: article_url(resource), title: URI.encode(resource.title) }

.Accordion.Accordion--activated

  - cache [resource, "contents"] do
    / Artikelbeschreibung
    = accordion_item "content" do
      .Accordion-step
        p
          = resource.content.html_safe
      - if resource.condition.old?
        .Accordion-step
          strong
            = "#{t("formtastic.labels.article.condition")}: "
          = resource.condition_extra_text

    = accordion_item "payment" do
      = render "/articles/show/payment"

      = render "/articles/show/transport"

    - if resource.has_commendation?
      = accordion_item "commendation" do
        = render 'articles/show/commendation'

  - cache [resource.seller,"legal_info"] do
    / Only legal sellers
    - if resource.seller.is_a?(LegalEntity)
      = accordion_item "terms", {content_class: "Accordion-content-maxsize"} do
        = resource.seller_terms.html_safe
      = accordion_item "cancellation", {content_class: "Accordion-content-maxsize"} do
        = resource.seller_cancellation.html_safe
        - if resource.seller.cancellation_form
          br
          = link_to resource.seller.cancellation_form.url(:original, false) do
            = t('formtastic.labels.user.cancellation_form')
      = accordion_item "about", {content_class: "Accordion-content-maxsize"} do
        = raw clickable_legal_links(resource.seller_about)


  - # Feedback Box
  - if policy(resource).report?
    = accordion_item "report" do
      = render 'feedbacks/varieties/report', feedback: Feedback.new

  - # Comment Area
  = render "comments/commentable_comments", commentable: resource, comments: resource.seller.is_a?(LegalEntity) ? resource.comments.legal_entity_publishable : resource.comments
